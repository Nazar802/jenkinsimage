<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.34.1">
      <projectUrl>https://github.com/Nazar802/demo3.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.6">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.34.1">
          <spec></spec>
        </com.cloudbees.jenkins.GitHubPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2648.va9433432b33c">
    <script>throttle([&apos;Lock&apos;]) {
    node {
        def remote = [:]
        
        withCredentials([sshUserPrivateKey(credentialsId: &apos;ssh&apos;, keyFileVariable: &apos;file&apos;, passphraseVariable: &apos;pass&apos;, usernameVariable: &apos;user&apos;)]) {
            remote.identityFile = file
            remote.name = &apos;backend&apos;
            remote.host = &quot;${VMIP}&quot;
            remote.user = &apos;azureuser&apos;
            remote.allowAnyHosts = true    
            
            stage (&apos;Cleanup&apos;) {
                writeFile file: &apos;cleanup.sh&apos;, text:
                &quot;rm -rf teachbackimage&quot;
                sshScript remote: remote, script: &quot;cleanup.sh&quot;
            }
            
            stage (&apos;Scm checkout&apos;) {
                git branch: &apos;backImage&apos;, url: &apos;https://github.com/Nazar802/demo3.git&apos;
                sshCommand remote: remote, command: &quot;git clone --branch backImage https://github.com/Nazar802/demo3.git teachbackimage&quot;
            }
            
            stage (&apos;Mvn Package&apos;) {
                writeFile file: &apos;package.sh&apos;, text: 
                &quot;cd ~/teachbackimage\nmvn package&quot;
                sshScript remote: remote, script: &quot;package.sh&quot;
            }
            
            stage (&apos;Docker Build&apos;) {
                writeFile file: &apos;build.sh&apos;, text: 
                &quot;cd ~/teachbackimage\ndocker build . -t ${ACR_ADDR}/backend:latest&quot;
                sshScript remote: remote, script: &quot;build.sh&quot;
            }
                
            stage (&apos;Docker Push&apos;) {
                writeFile file: &apos;push.sh&apos;, text:
                &quot;docker push ${ACR_ADDR}/backend:latest&quot;
                sshScript remote: remote, script: &quot;push.sh&quot;
            }
            
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>